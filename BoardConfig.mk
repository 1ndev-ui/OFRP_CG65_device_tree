#
# Copyright (C) 2024 The Android Open Source Project
# Copyright (C) 2024 SebaUbuntu's TWRP device tree generator
#
# SPDX-License-Identifier: Apache-2.0
#

DEVICE_PATH := device/vortex/CG65

# For building with minimal manifest
ALLOW_MISSING_DEPENDENCIES := true

# Architecture
TARGET_ARCH := arm64
TARGET_ARCH_VARIANT := armv8-a
TARGET_CPU_ABI := arm64-v8a
TARGET_CPU_ABI2 := 
TARGET_CPU_VARIANT := generic
TARGET_CPU_VARIANT_RUNTIME := cortex-a53

TARGET_2ND_ARCH := arm
TARGET_2ND_ARCH_VARIANT := armv8-a
TARGET_2ND_CPU_ABI := armeabi-v7a
TARGET_2ND_CPU_ABI2 := armeabi
TARGET_2ND_CPU_VARIANT := generic
TARGET_2ND_CPU_VARIANT_RUNTIME := cortex-a53

TARGET_USES_64_BIT_BINDER := true

# APEX
OVERRIDE_TARGET_FLATTEN_APEX := true

# Bootloader
TARGET_BOOTLOADER_BOARD_NAME := k65v1_64_bsp
TARGET_NO_BOOTLOADER := true

# Boot Image
BOARD_KERNEL_CMDLINE += bootopt=64S3,32N2,64N2
BOARD_KERNEL_CMDLINE += androidboot.selinux=permissive
BOARD_KERNEL_CMDLINE += androidboot.force_normal_boot=1
BOARD_HASH_TYPE := sha1
BOARD_KERNEL_BASE := 0x40078000
BOARD_KERNEL_PAGESIZE := 2048
BOARD_KERNEL_OFFSET := 0x00008000
BOARD_KERNEL_TAGS_OFFSET := 0x07808000
BOARD_RAMDISK_OFFSET := 0x11a88000
BOARD_KERNEL_SECOND_OFFSET := 0xbff88000
BOARD_BOOT_HEADER_VERSION := 2
BOARD_DTB_OFFSET := 0x07808000
BOARD_MKBOOTIMG_ARGS += --base $(BOARD_KERNEL_BASE)
BOARD_MKBOOTIMG_ARGS += --pagesize $(BOARD_KERNEL_PAGESIZE)
BOARD_MKBOOTIMG_ARGS += --ramdisk_offset $(BOARD_RAMDISK_OFFSET)
BOARD_MKBOOTIMG_ARGS += --tags_offset $(BOARD_KERNEL_TAGS_OFFSET)
BOARD_MKBOOTIMG_ARGS += --kernel_offset $(BOARD_KERNEL_OFFSET)
BOARD_MKBOOTIMG_ARGS += --second_offset $(BOARD_KERNEL_SECOND_OFFSET)
BOARD_MKBOOTIMG_ARGS += --header_version $(BOARD_BOOT_HEADER_VERSION)
BOARD_MKBOOTIMG_ARGS += --dtb_offset $(BOARD_DTB_OFFSET)
BOARD_MKBOOTIMG_ARGS += --dtb $(TARGET_PREBUILT_DTB)
BOARD_MKBOOTIMG_ARGS += --board $(TARGET_BOOTLOADER_BOARD_NAME)

# Kernel
BOARD_KERNEL_IMAGE_NAME := Image.gz-dtb
TARGET_PREBUILT_KERNEL := $(DEVICE_PATH)/prebuilt/Image.gz-dtb
TARGET_PREBUILT_DTB := $(DEVICE_PATH)/prebuilt/dtb.img
BOARD_PREBUILT_DTBIMAGE_DIR := $(DEVICE_PATH)/prebuilt/
BOARD_MKBOOTIMG_ARGS += --dtb $(TARGET_PREBUILT_DTB)
BOARD_INCLUDE_DTB_IN_BOOTIMG := true
TARGET_KERNEL_ARCH := arm64
TARGET_KERNEL_HEADER_ARCH := arm64
BOARD_FLASH_BLOCK_SIZE := 131072

# Partitions
BOARD_BOOTIMAGE_PARTITION_SIZE := 33554432 # 0x2000000 - hex
BOARD_RECOVERYIMAGE_PARTITION_SIZE := 33554432  # 0x2000000
BOARD_DTBOIMG_PARTITION_SIZE := 8388608 # 800000
BOARD_SYSTEMIMAGE_PARTITION_SIZE := 8792064000 # 20C0C4000
BOARD_USERDATAIMAGE_PARTITION_SIZE := 52769554432 # c494f8000
BOARD_VENDORIMAGE_PARTITION_SIZE := 67108864 # 4000000

# Partitions (File System)
TARGET_USERIMAGES_USE_EXT4 := true
TARGET_USERIMAGES_USE_F2FS := true
BOARD_SYSTEMIMAGE_PARTITION_TYPE := ext4
BOARD_USERDATAIMAGE_FILE_SYSTEM_TYPE := ext4
BOARD_VENDORIMAGE_FILE_SYSTEM_TYPE := ext4
TARGET_COPY_OUT_VENDOR := vendor

# Dynamic Partition
BOARD_SUPER_PARTITION_GROUPS := main
BOARD_MAIN_PARTITION_LIST := system vendor product
BOARD_MAIN_SIZE := 9122611200 # TODO: Fix hardcoded value

# Platform
TARGET_BOARD_PLATFORM := mt6765

# Recovery
TARGET_RECOVERY_PIXEL_FORMAT := "BGRA_8888"
TARGET_RECOVERY_FSTAB := $(DEVICE_PATH)/recovery/root/system/etc/recovery.fstab
BOARD_HAS_NO_SELECT_BUTTON := true
RECOVERY_SDCARD_ON_DATA := true
BOARD_USES_RECOVERY_AS_BOOT := true
TARGET_NO_RECOVERY := true
TW_HAS_NO_RECOVERY_PARTITION := true

# Properties
TARGET_SYSTEM_PROP += $(DEVICE_PATH)/system.prop
TARGET_VENDOR_PROP += $(DEVICE_PATH)/vendor.prop
TARGET_RECOVERY_INITRC := $(DEVICE_PATH)/recovery/root/init.recovery.mt6765.rc

# VINTF
DEVICE_MANIFEST_FILE := $(DEVICE_PATH)/recovery/root/system/etc/vintf/manifest.xml

# Treble
BOARD_VNDK_VERSION := current

# System as root
BOARD_BUILD_SYSTEM_ROOT_IMAGE := false
BOARD_SUPPRESS_SECURE_ERASE := true

# Security patch level
VENDOR_SECURITY_PATCH := 2021-08-01

# Verified Boot
BOARD_AVB_ENABLE := true
BOARD_AVB_MAKE_VBMETA_IMAGE_ARGS += --flags 3

# MTK Hardware
BOARD_HAS_MTK_HARDWARE := true
BOARD_USES_MTK_HARDWARE := true
MTK_HARDWARE := true

# Assert
TARGET_OTA_ASSERT_DEVICE := CG65

# Hack: prevent anti rollback
PLATFORM_SECURITY_PATCH := 2099-12-31
VENDOR_SECURITY_PATCH := $(PLATFORM_SECURITY_PATCH)
BOOT_SECURITY_PATCH := $(PLATFORM_SECURITY_PATCH)
PLATFORM_VERSION := 99.99.99
PLATFORM_VERSION_LAST_STABLE := $(PLATFORM_VERSION)

# Metadata
BOARD_USES_METADATA_PARTITION := true
BOARD_ROOT_EXTRA_FOLDERS += metadata

# Crypto
TW_INCLUDE_CRYPTO := true
TW_INCLUDE_CRYPTO_FBE := true
TW_INCLUDE_FBE_METADATA_DECRYPT := true
TW_USE_FSCRYPT_POLICY := 2
TW_PREPARE_DATA_MEDIA_EARLY := true

# Additional binaries & libraries needed for recovery
TARGET_RECOVERY_DEVICE_MODULES += libkeymaster4

TW_RECOVERY_ADDITIONAL_RELINK_LIBRARY_FILES += \
    $(TARGET_OUT_VENDOR_SHARED_LIBRARIES)/lib64/libimsg_log.so \
    $(TARGET_OUT_VENDOR_SHARED_LIBRARIES)/lib64/libTEECommon.so \
    $(TARGET_OUT_VENDOR_SHARED_LIBRARIES)/lib64/libteei_daemon_vfs.so \
    $(TARGET_OUT_VENDOR_SHARED_LIBRARIES)/lib64/vendor.mediatek.hardware.keymaster_attestation@1.0.so \
    $(TARGET_OUT_VENDOR_SHARED_LIBRARIES)/lib64/vendor.mediatek.hardware.keymaster_attestation@1.1.so \
    $(TARGET_OUT_VENDOR_SHARED_LIBRARIES)/lib64/hw/android.hardware.gatekeeper@1.0-impl.so \
    $(TARGET_OUT_VENDOR_SHARED_LIBRARIES)/lib64/hw/gatekeeper.beanpod.so \
    $(TARGET_OUT_VENDOR_SHARED_LIBRARIES)/lib64/hw/gatekeeper.default.so \
    $(TARGET_OUT_VENDOR_SHARED_LIBRARIES)/lib64/hw/kmsetkey.beanpod.so \
    $(TARGET_OUT_VENDOR_SHARED_LIBRARIES)/lib64/hw/libSoftGatekeeper.so \
    $(TARGET_OUT_VENDOR_SHARED_LIBRARIES)/lib64/hw/vendor.mediatek.hardware.keymaster_attestation@1.1-impl.so \
    $(TARGET_OUT_VENDOR_SHARED_LIBRARIES)/lib64/vendor.microtrust.hardware.thh@2.0.so \
    $(TARGET_OUT_VENDOR_EXECUTABLES)/bin/hw/android.hardware.gatekeeper@1.0-service \
    $(TARGET_OUT_VENDOR_EXECUTABLES)/bin/hw/vendor.mediatek.hardware.keymaster_attestation@1.1-service \
    $(TARGET_OUT_VENDOR_EXECUTABLES)/bin/hw/android.hardware.keymaster@4.1-service.beanpod


TW_LOAD_VENDOR_MODULES := "ilitek_v3.ko"

# TWRP Configuration
BOARD_HAS_LARGE_FILESYSTEM := true
TW_THEME := portrait_hdpi
TW_EXTRA_LANGUAGES := true
TW_INPUT_BLACKLIST := "hbtp_vm"
TW_USE_TOOLBOX := true

# Tools - magiskboot
TW_INCLUDE_REPACKTOOLS := true

# Display
TW_BRIGHTNESS_PATH := /sys/class/leds/lcd-backlight/brightness
TARGET_RECOVERY_LCD_BACKLIGHT_PATH := \"/sys/class/leds/lcd-backlight/brightness\"
TW_CUSTOM_CPU_TEMP_PATH := /sys/devices/virtual/thermal/thermal_zone1/temp
TW_MAX_BRIGHTNESS := 255
TW_DEFAULT_BRIGHTNESS := 150
TW_SCREEN_BLANK_ON_BOOT := false
TARGET_SCREEN_DENSITY := 320
DEVICE_SCREEN_WIDTH := 720
DEVICE_SCREEN_HEIGHT := 1600

# Statusbar icons flags 720 x 1600
TW_STATUS_ICONS_ALIGN := center
TW_CUSTOM_CPU_POS := 142
TW_CUSTOM_CLOCK_POS := 330
TW_CUSTOM_BATTERY_POS := 800

# TWRP specific build flags - Configuration
TW_USE_MODEL_HARDWARE_ID_FOR_DEVICE_ID := true
TW_DEFAULT_LANGUAGE := en
TW_EXCLUDE_DEFAULT_USB_INIT := true
TW_INCLUDE_NTFS_3G := true
TARGET_USES_MKE2FS := true
TARGET_DISABLE_TRIPLE_BUFFERING := false

# Storage
TW_NO_USB_STORAGE := false
TW_INTERNAL_STORAGE_PATH := "/data/media/0"
TW_INTERNAL_STORAGE_MOUNT_POINT := "data"
TW_EXTERNAL_STORAGE_PATH := "/external_sd"
TW_EXTERNAL_STORAGE_MOUNT_POINT := "external_sd"
TW_HAS_MTP := true
TW_MTP_DEVICE := /dev/mtp_usb
TARGET_USE_CUSTOM_LUN_FILE_PATH := /config/usb_gadget/g1/functions/mass_storage.usb0/lun.0/file

# Debug
TWRP_INCLUDE_LOGCAT := true
TARGET_USES_LOGD := true

